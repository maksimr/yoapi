// AUTOGENERATED FILE DO NOT EDIT!
// This file was generated by script

/**
 * @template T
 * @template R
 */
export class Request {
  /**
   * @param {string} path
   * @param {T} options
   */
  constructor(path, options) {
    this.path = path;
    this.options = options;
  }
}

/**
 * @typedef {object} GetActivitiesRequestOptions
 * @property {object} [query]
 * @property {string} [query.categories]
 * @property {boolean} [query.reverse]
 * @property {string} [query.start]
 * @property {string} [query.end]
 * @property {string} [query.author]
 * @property {string} [query.issueQuery]
 * @property {string} [query.fields]
 * @property {number} [query.$skip]
 * @property {number} [query.$top]
 */

/**
 * @param {GetActivitiesRequestOptions} options
 * @returns {Request<GetActivitiesRequestOptions,Array<ActivityItem>>}
 */
export function createGetActivitiesRequest(options) {
  return new Request('/activities', options);
}

/**
 * @typedef {object} GetActivitiesActivityItemRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {GetActivitiesActivityItemRequestOptions} options
 * @returns {Request<GetActivitiesActivityItemRequestOptions,ActivityItem>}
 */
export function createGetActivitiesActivityItemRequest(options) {
  return new Request('/activities/{id}', options);
}

/**
 * @typedef {object} GetActivitiesPageRequestOptions
 * @property {object} [query]
 * @property {string} [query.categories]
 * @property {boolean} [query.reverse]
 * @property {string} [query.start]
 * @property {string} [query.end]
 * @property {string} [query.author]
 * @property {string} [query.issueQuery]
 * @property {string} [query.cursor]
 * @property {string} [query.activityId]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {GetActivitiesPageRequestOptions} options
 * @returns {Request<GetActivitiesPageRequestOptions,ActivityCursorPage>}
 */
export function createGetActivitiesPageRequest(options) {
  return new Request('/activitiesPage', options);
}

/**
 * @typedef {object} GetAdminCustomFieldSettingsBundlesBuildRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {number} [query.$skip]
 * @property {number} [query.$top]
 */

/**
 * @param {GetAdminCustomFieldSettingsBundlesBuildRequestOptions} options
 * @returns {Request<GetAdminCustomFieldSettingsBundlesBuildRequestOptions,Array<BuildBundle>>}
 */
export function createGetAdminCustomFieldSettingsBundlesBuildRequest(options) {
  return new Request('/admin/customFieldSettings/bundles/build', options);
}

/**
 * @typedef {object} PostAdminCustomFieldSettingsBundlesBuildRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 */

/**
 * @param {PostAdminCustomFieldSettingsBundlesBuildRequestOptions} options
 * @returns {Request<PostAdminCustomFieldSettingsBundlesBuildRequestOptions,BuildBundle>}
 */
export function createPostAdminCustomFieldSettingsBundlesBuildRequest(options) {
  return new Request('/admin/customFieldSettings/bundles/build', options);
}

/**
 * @typedef {object} GetAdminCustomFieldSettingsBundlesBuildBuildBundleRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {GetAdminCustomFieldSettingsBundlesBuildBuildBundleRequestOptions} options
 * @returns {Request<GetAdminCustomFieldSettingsBundlesBuildBuildBundleRequestOptions,BuildBundle>}
 */
export function createGetAdminCustomFieldSettingsBundlesBuildBuildBundleRequest(options) {
  return new Request('/admin/customFieldSettings/bundles/build/{id}', options);
}

/**
 * @typedef {object} PostAdminCustomFieldSettingsBundlesBuildBuildBundleRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {PostAdminCustomFieldSettingsBundlesBuildBuildBundleRequestOptions} options
 * @returns {Request<PostAdminCustomFieldSettingsBundlesBuildBuildBundleRequestOptions,BuildBundle>}
 */
export function createPostAdminCustomFieldSettingsBundlesBuildBuildBundleRequest(options) {
  return new Request('/admin/customFieldSettings/bundles/build/{id}', options);
}

/**
 * @typedef {object} DeleteAdminCustomFieldSettingsBundlesBuildBuildBundleRequestOptions
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {DeleteAdminCustomFieldSettingsBundlesBuildBuildBundleRequestOptions} options
 * @returns {Request<DeleteAdminCustomFieldSettingsBundlesBuildBuildBundleRequestOptions,object>}
 */
export function createDeleteAdminCustomFieldSettingsBundlesBuildBuildBundleRequest(options) {
  return new Request('/admin/customFieldSettings/bundles/build/{id}', options);
}

/**
 * @typedef {object} GetAdminCustomFieldSettingsBundlesEnumRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {number} [query.$skip]
 * @property {number} [query.$top]
 */

/**
 * @param {GetAdminCustomFieldSettingsBundlesEnumRequestOptions} options
 * @returns {Request<GetAdminCustomFieldSettingsBundlesEnumRequestOptions,Array<EnumBundle>>}
 */
export function createGetAdminCustomFieldSettingsBundlesEnumRequest(options) {
  return new Request('/admin/customFieldSettings/bundles/enum', options);
}

/**
 * @typedef {object} PostAdminCustomFieldSettingsBundlesEnumRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 */

/**
 * @param {PostAdminCustomFieldSettingsBundlesEnumRequestOptions} options
 * @returns {Request<PostAdminCustomFieldSettingsBundlesEnumRequestOptions,EnumBundle>}
 */
export function createPostAdminCustomFieldSettingsBundlesEnumRequest(options) {
  return new Request('/admin/customFieldSettings/bundles/enum', options);
}

/**
 * @typedef {object} GetAdminCustomFieldSettingsBundlesEnumEnumBundleRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {GetAdminCustomFieldSettingsBundlesEnumEnumBundleRequestOptions} options
 * @returns {Request<GetAdminCustomFieldSettingsBundlesEnumEnumBundleRequestOptions,EnumBundle>}
 */
export function createGetAdminCustomFieldSettingsBundlesEnumEnumBundleRequest(options) {
  return new Request('/admin/customFieldSettings/bundles/enum/{id}', options);
}

/**
 * @typedef {object} PostAdminCustomFieldSettingsBundlesEnumEnumBundleRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {PostAdminCustomFieldSettingsBundlesEnumEnumBundleRequestOptions} options
 * @returns {Request<PostAdminCustomFieldSettingsBundlesEnumEnumBundleRequestOptions,EnumBundle>}
 */
export function createPostAdminCustomFieldSettingsBundlesEnumEnumBundleRequest(options) {
  return new Request('/admin/customFieldSettings/bundles/enum/{id}', options);
}

/**
 * @typedef {object} DeleteAdminCustomFieldSettingsBundlesEnumEnumBundleRequestOptions
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {DeleteAdminCustomFieldSettingsBundlesEnumEnumBundleRequestOptions} options
 * @returns {Request<DeleteAdminCustomFieldSettingsBundlesEnumEnumBundleRequestOptions,object>}
 */
export function createDeleteAdminCustomFieldSettingsBundlesEnumEnumBundleRequest(options) {
  return new Request('/admin/customFieldSettings/bundles/enum/{id}', options);
}

/**
 * @typedef {object} GetAdminCustomFieldSettingsBundlesOwnedFieldRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {number} [query.$skip]
 * @property {number} [query.$top]
 */

/**
 * @param {GetAdminCustomFieldSettingsBundlesOwnedFieldRequestOptions} options
 * @returns {Request<GetAdminCustomFieldSettingsBundlesOwnedFieldRequestOptions,Array<OwnedBundle>>}
 */
export function createGetAdminCustomFieldSettingsBundlesOwnedFieldRequest(options) {
  return new Request('/admin/customFieldSettings/bundles/ownedField', options);
}

/**
 * @typedef {object} PostAdminCustomFieldSettingsBundlesOwnedFieldRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 */

/**
 * @param {PostAdminCustomFieldSettingsBundlesOwnedFieldRequestOptions} options
 * @returns {Request<PostAdminCustomFieldSettingsBundlesOwnedFieldRequestOptions,OwnedBundle>}
 */
export function createPostAdminCustomFieldSettingsBundlesOwnedFieldRequest(options) {
  return new Request('/admin/customFieldSettings/bundles/ownedField', options);
}

/**
 * @typedef {object} GetAdminCustomFieldSettingsBundlesOwnedFieldOwnedBundleRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {GetAdminCustomFieldSettingsBundlesOwnedFieldOwnedBundleRequestOptions} options
 * @returns {Request<GetAdminCustomFieldSettingsBundlesOwnedFieldOwnedBundleRequestOptions,OwnedBundle>}
 */
export function createGetAdminCustomFieldSettingsBundlesOwnedFieldOwnedBundleRequest(options) {
  return new Request('/admin/customFieldSettings/bundles/ownedField/{id}', options);
}

/**
 * @typedef {object} PostAdminCustomFieldSettingsBundlesOwnedFieldOwnedBundleRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {PostAdminCustomFieldSettingsBundlesOwnedFieldOwnedBundleRequestOptions} options
 * @returns {Request<PostAdminCustomFieldSettingsBundlesOwnedFieldOwnedBundleRequestOptions,OwnedBundle>}
 */
export function createPostAdminCustomFieldSettingsBundlesOwnedFieldOwnedBundleRequest(options) {
  return new Request('/admin/customFieldSettings/bundles/ownedField/{id}', options);
}

/**
 * @typedef {object} DeleteAdminCustomFieldSettingsBundlesOwnedFieldOwnedBundleRequestOptions
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {DeleteAdminCustomFieldSettingsBundlesOwnedFieldOwnedBundleRequestOptions} options
 * @returns {Request<DeleteAdminCustomFieldSettingsBundlesOwnedFieldOwnedBundleRequestOptions,object>}
 */
export function createDeleteAdminCustomFieldSettingsBundlesOwnedFieldOwnedBundleRequest(options) {
  return new Request('/admin/customFieldSettings/bundles/ownedField/{id}', options);
}

/**
 * @typedef {object} GetAdminCustomFieldSettingsBundlesStateRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {number} [query.$skip]
 * @property {number} [query.$top]
 */

/**
 * @param {GetAdminCustomFieldSettingsBundlesStateRequestOptions} options
 * @returns {Request<GetAdminCustomFieldSettingsBundlesStateRequestOptions,Array<StateBundle>>}
 */
export function createGetAdminCustomFieldSettingsBundlesStateRequest(options) {
  return new Request('/admin/customFieldSettings/bundles/state', options);
}

/**
 * @typedef {object} PostAdminCustomFieldSettingsBundlesStateRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 */

/**
 * @param {PostAdminCustomFieldSettingsBundlesStateRequestOptions} options
 * @returns {Request<PostAdminCustomFieldSettingsBundlesStateRequestOptions,StateBundle>}
 */
export function createPostAdminCustomFieldSettingsBundlesStateRequest(options) {
  return new Request('/admin/customFieldSettings/bundles/state', options);
}

/**
 * @typedef {object} GetAdminCustomFieldSettingsBundlesStateStateBundleRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {GetAdminCustomFieldSettingsBundlesStateStateBundleRequestOptions} options
 * @returns {Request<GetAdminCustomFieldSettingsBundlesStateStateBundleRequestOptions,StateBundle>}
 */
export function createGetAdminCustomFieldSettingsBundlesStateStateBundleRequest(options) {
  return new Request('/admin/customFieldSettings/bundles/state/{id}', options);
}

/**
 * @typedef {object} PostAdminCustomFieldSettingsBundlesStateStateBundleRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {PostAdminCustomFieldSettingsBundlesStateStateBundleRequestOptions} options
 * @returns {Request<PostAdminCustomFieldSettingsBundlesStateStateBundleRequestOptions,StateBundle>}
 */
export function createPostAdminCustomFieldSettingsBundlesStateStateBundleRequest(options) {
  return new Request('/admin/customFieldSettings/bundles/state/{id}', options);
}

/**
 * @typedef {object} DeleteAdminCustomFieldSettingsBundlesStateStateBundleRequestOptions
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {DeleteAdminCustomFieldSettingsBundlesStateStateBundleRequestOptions} options
 * @returns {Request<DeleteAdminCustomFieldSettingsBundlesStateStateBundleRequestOptions,object>}
 */
export function createDeleteAdminCustomFieldSettingsBundlesStateStateBundleRequest(options) {
  return new Request('/admin/customFieldSettings/bundles/state/{id}', options);
}

/**
 * @typedef {object} GetAdminCustomFieldSettingsBundlesUserRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {number} [query.$skip]
 * @property {number} [query.$top]
 */

/**
 * @param {GetAdminCustomFieldSettingsBundlesUserRequestOptions} options
 * @returns {Request<GetAdminCustomFieldSettingsBundlesUserRequestOptions,Array<UserBundle>>}
 */
export function createGetAdminCustomFieldSettingsBundlesUserRequest(options) {
  return new Request('/admin/customFieldSettings/bundles/user', options);
}

/**
 * @typedef {object} PostAdminCustomFieldSettingsBundlesUserRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 */

/**
 * @param {PostAdminCustomFieldSettingsBundlesUserRequestOptions} options
 * @returns {Request<PostAdminCustomFieldSettingsBundlesUserRequestOptions,UserBundle>}
 */
export function createPostAdminCustomFieldSettingsBundlesUserRequest(options) {
  return new Request('/admin/customFieldSettings/bundles/user', options);
}

/**
 * @typedef {object} GetAdminCustomFieldSettingsBundlesUserUserBundleRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {GetAdminCustomFieldSettingsBundlesUserUserBundleRequestOptions} options
 * @returns {Request<GetAdminCustomFieldSettingsBundlesUserUserBundleRequestOptions,UserBundle>}
 */
export function createGetAdminCustomFieldSettingsBundlesUserUserBundleRequest(options) {
  return new Request('/admin/customFieldSettings/bundles/user/{id}', options);
}

/**
 * @typedef {object} PostAdminCustomFieldSettingsBundlesUserUserBundleRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {PostAdminCustomFieldSettingsBundlesUserUserBundleRequestOptions} options
 * @returns {Request<PostAdminCustomFieldSettingsBundlesUserUserBundleRequestOptions,UserBundle>}
 */
export function createPostAdminCustomFieldSettingsBundlesUserUserBundleRequest(options) {
  return new Request('/admin/customFieldSettings/bundles/user/{id}', options);
}

/**
 * @typedef {object} DeleteAdminCustomFieldSettingsBundlesUserUserBundleRequestOptions
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {DeleteAdminCustomFieldSettingsBundlesUserUserBundleRequestOptions} options
 * @returns {Request<DeleteAdminCustomFieldSettingsBundlesUserUserBundleRequestOptions,object>}
 */
export function createDeleteAdminCustomFieldSettingsBundlesUserUserBundleRequest(options) {
  return new Request('/admin/customFieldSettings/bundles/user/{id}', options);
}

/**
 * @typedef {object} GetAdminCustomFieldSettingsBundlesUserAggregatedUsersRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {number} [query.$skip]
 * @property {number} [query.$top]
 */

/**
 * @param {GetAdminCustomFieldSettingsBundlesUserAggregatedUsersRequestOptions} options
 * @returns {Request<GetAdminCustomFieldSettingsBundlesUserAggregatedUsersRequestOptions,Array<User>>}
 */
export function createGetAdminCustomFieldSettingsBundlesUserAggregatedUsersRequest(options) {
  return new Request('/admin/customFieldSettings/bundles/user/{id}/aggregatedUsers', options);
}



/**
 * @typedef {object} GetAdminCustomFieldSettingsBundlesUserGroupsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {number} [query.$skip]
 * @property {number} [query.$top]
 */

/**
 * @param {GetAdminCustomFieldSettingsBundlesUserGroupsRequestOptions} options
 * @returns {Request<GetAdminCustomFieldSettingsBundlesUserGroupsRequestOptions,Array<UserGroup>>}
 */
export function createGetAdminCustomFieldSettingsBundlesUserGroupsRequest(options) {
  return new Request('/admin/customFieldSettings/bundles/user/{id}/groups', options);
}

/**
 * @typedef {object} PostAdminCustomFieldSettingsBundlesUserGroupsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {PostAdminCustomFieldSettingsBundlesUserGroupsRequestOptions} options
 * @returns {Request<PostAdminCustomFieldSettingsBundlesUserGroupsRequestOptions,UserGroup>}
 */
export function createPostAdminCustomFieldSettingsBundlesUserGroupsRequest(options) {
  return new Request('/admin/customFieldSettings/bundles/user/{id}/groups', options);
}

/**
 * @typedef {object} GetAdminCustomFieldSettingsBundlesUserGroupsUserGroupRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.userGroupId
 */

/**
 * @param {GetAdminCustomFieldSettingsBundlesUserGroupsUserGroupRequestOptions} options
 * @returns {Request<GetAdminCustomFieldSettingsBundlesUserGroupsUserGroupRequestOptions,UserGroup>}
 */
export function createGetAdminCustomFieldSettingsBundlesUserGroupsUserGroupRequest(options) {
  return new Request('/admin/customFieldSettings/bundles/user/{id}/groups/{userGroupId}', options);
}

/**
 * @typedef {object} DeleteAdminCustomFieldSettingsBundlesUserGroupsUserGroupRequestOptions
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.userGroupId
 */

/**
 * @param {DeleteAdminCustomFieldSettingsBundlesUserGroupsUserGroupRequestOptions} options
 * @returns {Request<DeleteAdminCustomFieldSettingsBundlesUserGroupsUserGroupRequestOptions,object>}
 */
export function createDeleteAdminCustomFieldSettingsBundlesUserGroupsUserGroupRequest(options) {
  return new Request('/admin/customFieldSettings/bundles/user/{id}/groups/{userGroupId}', options);
}

/**
 * @typedef {object} GetAdminCustomFieldSettingsBundlesUserIndividualsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {number} [query.$skip]
 * @property {number} [query.$top]
 */

/**
 * @param {GetAdminCustomFieldSettingsBundlesUserIndividualsRequestOptions} options
 * @returns {Request<GetAdminCustomFieldSettingsBundlesUserIndividualsRequestOptions,Array<User>>}
 */
export function createGetAdminCustomFieldSettingsBundlesUserIndividualsRequest(options) {
  return new Request('/admin/customFieldSettings/bundles/user/{id}/individuals', options);
}

/**
 * @typedef {object} PostAdminCustomFieldSettingsBundlesUserIndividualsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {PostAdminCustomFieldSettingsBundlesUserIndividualsRequestOptions} options
 * @returns {Request<PostAdminCustomFieldSettingsBundlesUserIndividualsRequestOptions,User>}
 */
export function createPostAdminCustomFieldSettingsBundlesUserIndividualsRequest(options) {
  return new Request('/admin/customFieldSettings/bundles/user/{id}/individuals', options);
}

/**
 * @typedef {object} GetAdminCustomFieldSettingsBundlesUserIndividualsUserRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.userId
 */

/**
 * @param {GetAdminCustomFieldSettingsBundlesUserIndividualsUserRequestOptions} options
 * @returns {Request<GetAdminCustomFieldSettingsBundlesUserIndividualsUserRequestOptions,User>}
 */
export function createGetAdminCustomFieldSettingsBundlesUserIndividualsUserRequest(options) {
  return new Request('/admin/customFieldSettings/bundles/user/{id}/individuals/{userId}', options);
}

/**
 * @typedef {object} DeleteAdminCustomFieldSettingsBundlesUserIndividualsUserRequestOptions
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.userId
 */

/**
 * @param {DeleteAdminCustomFieldSettingsBundlesUserIndividualsUserRequestOptions} options
 * @returns {Request<DeleteAdminCustomFieldSettingsBundlesUserIndividualsUserRequestOptions,object>}
 */
export function createDeleteAdminCustomFieldSettingsBundlesUserIndividualsUserRequest(options) {
  return new Request('/admin/customFieldSettings/bundles/user/{id}/individuals/{userId}', options);
}

/**
 * @typedef {object} GetAdminCustomFieldSettingsBundlesVersionRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {number} [query.$skip]
 * @property {number} [query.$top]
 */

/**
 * @param {GetAdminCustomFieldSettingsBundlesVersionRequestOptions} options
 * @returns {Request<GetAdminCustomFieldSettingsBundlesVersionRequestOptions,Array<VersionBundle>>}
 */
export function createGetAdminCustomFieldSettingsBundlesVersionRequest(options) {
  return new Request('/admin/customFieldSettings/bundles/version', options);
}

/**
 * @typedef {object} PostAdminCustomFieldSettingsBundlesVersionRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 */

/**
 * @param {PostAdminCustomFieldSettingsBundlesVersionRequestOptions} options
 * @returns {Request<PostAdminCustomFieldSettingsBundlesVersionRequestOptions,VersionBundle>}
 */
export function createPostAdminCustomFieldSettingsBundlesVersionRequest(options) {
  return new Request('/admin/customFieldSettings/bundles/version', options);
}

/**
 * @typedef {object} GetAdminCustomFieldSettingsBundlesVersionVersionBundleRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {GetAdminCustomFieldSettingsBundlesVersionVersionBundleRequestOptions} options
 * @returns {Request<GetAdminCustomFieldSettingsBundlesVersionVersionBundleRequestOptions,VersionBundle>}
 */
export function createGetAdminCustomFieldSettingsBundlesVersionVersionBundleRequest(options) {
  return new Request('/admin/customFieldSettings/bundles/version/{id}', options);
}

/**
 * @typedef {object} PostAdminCustomFieldSettingsBundlesVersionVersionBundleRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {PostAdminCustomFieldSettingsBundlesVersionVersionBundleRequestOptions} options
 * @returns {Request<PostAdminCustomFieldSettingsBundlesVersionVersionBundleRequestOptions,VersionBundle>}
 */
export function createPostAdminCustomFieldSettingsBundlesVersionVersionBundleRequest(options) {
  return new Request('/admin/customFieldSettings/bundles/version/{id}', options);
}

/**
 * @typedef {object} DeleteAdminCustomFieldSettingsBundlesVersionVersionBundleRequestOptions
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {DeleteAdminCustomFieldSettingsBundlesVersionVersionBundleRequestOptions} options
 * @returns {Request<DeleteAdminCustomFieldSettingsBundlesVersionVersionBundleRequestOptions,object>}
 */
export function createDeleteAdminCustomFieldSettingsBundlesVersionVersionBundleRequest(options) {
  return new Request('/admin/customFieldSettings/bundles/version/{id}', options);
}

/**
 * @typedef {object} GetAdminCustomFieldSettingsCustomFieldsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {number} [query.$skip]
 * @property {number} [query.$top]
 */

/**
 * @param {GetAdminCustomFieldSettingsCustomFieldsRequestOptions} options
 * @returns {Request<GetAdminCustomFieldSettingsCustomFieldsRequestOptions,Array<CustomField>>}
 */
export function createGetAdminCustomFieldSettingsCustomFieldsRequest(options) {
  return new Request('/admin/customFieldSettings/customFields', options);
}

/**
 * @typedef {object} PostAdminCustomFieldSettingsCustomFieldsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 */

/**
 * @param {PostAdminCustomFieldSettingsCustomFieldsRequestOptions} options
 * @returns {Request<PostAdminCustomFieldSettingsCustomFieldsRequestOptions,CustomField>}
 */
export function createPostAdminCustomFieldSettingsCustomFieldsRequest(options) {
  return new Request('/admin/customFieldSettings/customFields', options);
}

/**
 * @typedef {object} GetAdminCustomFieldSettingsCustomFieldsCustomFieldRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {GetAdminCustomFieldSettingsCustomFieldsCustomFieldRequestOptions} options
 * @returns {Request<GetAdminCustomFieldSettingsCustomFieldsCustomFieldRequestOptions,CustomField>}
 */
export function createGetAdminCustomFieldSettingsCustomFieldsCustomFieldRequest(options) {
  return new Request('/admin/customFieldSettings/customFields/{id}', options);
}

/**
 * @typedef {object} PostAdminCustomFieldSettingsCustomFieldsCustomFieldRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {PostAdminCustomFieldSettingsCustomFieldsCustomFieldRequestOptions} options
 * @returns {Request<PostAdminCustomFieldSettingsCustomFieldsCustomFieldRequestOptions,CustomField>}
 */
export function createPostAdminCustomFieldSettingsCustomFieldsCustomFieldRequest(options) {
  return new Request('/admin/customFieldSettings/customFields/{id}', options);
}

/**
 * @typedef {object} DeleteAdminCustomFieldSettingsCustomFieldsCustomFieldRequestOptions
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {DeleteAdminCustomFieldSettingsCustomFieldsCustomFieldRequestOptions} options
 * @returns {Request<DeleteAdminCustomFieldSettingsCustomFieldsCustomFieldRequestOptions,object>}
 */
export function createDeleteAdminCustomFieldSettingsCustomFieldsCustomFieldRequest(options) {
  return new Request('/admin/customFieldSettings/customFields/{id}', options);
}

/**
 * @typedef {object} GetAdminCustomFieldSettingsCustomFieldsFieldDefaultsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.customFieldDefaultsId
 */

/**
 * @param {GetAdminCustomFieldSettingsCustomFieldsFieldDefaultsRequestOptions} options
 * @returns {Request<GetAdminCustomFieldSettingsCustomFieldsFieldDefaultsRequestOptions,CustomFieldDefaults>}
 */
export function createGetAdminCustomFieldSettingsCustomFieldsFieldDefaultsRequest(options) {
  return new Request('/admin/customFieldSettings/customFields/{id}/fieldDefaults', options);
}

/**
 * @typedef {object} PostAdminCustomFieldSettingsCustomFieldsFieldDefaultsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.customFieldDefaultsId
 */

/**
 * @param {PostAdminCustomFieldSettingsCustomFieldsFieldDefaultsRequestOptions} options
 * @returns {Request<PostAdminCustomFieldSettingsCustomFieldsFieldDefaultsRequestOptions,CustomFieldDefaults>}
 */
export function createPostAdminCustomFieldSettingsCustomFieldsFieldDefaultsRequest(options) {
  return new Request('/admin/customFieldSettings/customFields/{id}/fieldDefaults', options);
}

/**
 * @typedef {object} GetAdminCustomFieldSettingsCustomFieldsInstancesRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {number} [query.$skip]
 * @property {number} [query.$top]
 */

/**
 * @param {GetAdminCustomFieldSettingsCustomFieldsInstancesRequestOptions} options
 * @returns {Request<GetAdminCustomFieldSettingsCustomFieldsInstancesRequestOptions,Array<ProjectCustomField>>}
 */
export function createGetAdminCustomFieldSettingsCustomFieldsInstancesRequest(options) {
  return new Request('/admin/customFieldSettings/customFields/{id}/instances', options);
}



/**
 * @typedef {object} GetAdminCustomFieldSettingsTypesRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {number} [query.$skip]
 * @property {number} [query.$top]
 */

/**
 * @param {GetAdminCustomFieldSettingsTypesRequestOptions} options
 * @returns {Request<GetAdminCustomFieldSettingsTypesRequestOptions,Array<FieldType>>}
 */
export function createGetAdminCustomFieldSettingsTypesRequest(options) {
  return new Request('/admin/customFieldSettings/types', options);
}



/**
 * @typedef {object} GetAdminDatabaseBackupBackupsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {number} [query.$skip]
 * @property {number} [query.$top]
 */

/**
 * @param {GetAdminDatabaseBackupBackupsRequestOptions} options
 * @returns {Request<GetAdminDatabaseBackupBackupsRequestOptions,Array<BackupFile>>}
 */
export function createGetAdminDatabaseBackupBackupsRequest(options) {
  return new Request('/admin/databaseBackup/backups', options);
}

/**
 * @typedef {object} GetAdminDatabaseBackupBackupsBackupFileRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {GetAdminDatabaseBackupBackupsBackupFileRequestOptions} options
 * @returns {Request<GetAdminDatabaseBackupBackupsBackupFileRequestOptions,BackupFile>}
 */
export function createGetAdminDatabaseBackupBackupsBackupFileRequest(options) {
  return new Request('/admin/databaseBackup/backups/{id}', options);
}

/**
 * @typedef {object} GetAdminDatabaseBackupSettingsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {GetAdminDatabaseBackupSettingsRequestOptions} options
 * @returns {Request<GetAdminDatabaseBackupSettingsRequestOptions,DatabaseBackupSettings>}
 */
export function createGetAdminDatabaseBackupSettingsRequest(options) {
  return new Request('/admin/databaseBackup/settings', options);
}

/**
 * @typedef {object} PostAdminDatabaseBackupSettingsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {PostAdminDatabaseBackupSettingsRequestOptions} options
 * @returns {Request<PostAdminDatabaseBackupSettingsRequestOptions,DatabaseBackupSettings>}
 */
export function createPostAdminDatabaseBackupSettingsRequest(options) {
  return new Request('/admin/databaseBackup/settings', options);
}

/**
 * @typedef {object} GetAdminDatabaseBackupSettingsBackupStatusRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.backupStatusId
 */

/**
 * @param {GetAdminDatabaseBackupSettingsBackupStatusRequestOptions} options
 * @returns {Request<GetAdminDatabaseBackupSettingsBackupStatusRequestOptions,BackupStatus>}
 */
export function createGetAdminDatabaseBackupSettingsBackupStatusRequest(options) {
  return new Request('/admin/databaseBackup/settings/backupStatus', options);
}

/**
 * @typedef {object} GetAdminGlobalSettingsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {GetAdminGlobalSettingsRequestOptions} options
 * @returns {Request<GetAdminGlobalSettingsRequestOptions,GlobalSettings>}
 */
export function createGetAdminGlobalSettingsRequest(options) {
  return new Request('/admin/globalSettings', options);
}

/**
 * @typedef {object} PostAdminGlobalSettingsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {PostAdminGlobalSettingsRequestOptions} options
 * @returns {Request<PostAdminGlobalSettingsRequestOptions,GlobalSettings>}
 */
export function createPostAdminGlobalSettingsRequest(options) {
  return new Request('/admin/globalSettings', options);
}

/**
 * @typedef {object} GetAdminGlobalSettingsAppearanceSettingsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.appearanceSettingsId
 */

/**
 * @param {GetAdminGlobalSettingsAppearanceSettingsRequestOptions} options
 * @returns {Request<GetAdminGlobalSettingsAppearanceSettingsRequestOptions,AppearanceSettings>}
 */
export function createGetAdminGlobalSettingsAppearanceSettingsRequest(options) {
  return new Request('/admin/globalSettings/appearanceSettings', options);
}

/**
 * @typedef {object} PostAdminGlobalSettingsAppearanceSettingsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.appearanceSettingsId
 */

/**
 * @param {PostAdminGlobalSettingsAppearanceSettingsRequestOptions} options
 * @returns {Request<PostAdminGlobalSettingsAppearanceSettingsRequestOptions,AppearanceSettings>}
 */
export function createPostAdminGlobalSettingsAppearanceSettingsRequest(options) {
  return new Request('/admin/globalSettings/appearanceSettings', options);
}

/**
 * @typedef {object} GetAdminGlobalSettingsLicenseRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.licenseId
 */

/**
 * @param {GetAdminGlobalSettingsLicenseRequestOptions} options
 * @returns {Request<GetAdminGlobalSettingsLicenseRequestOptions,License>}
 */
export function createGetAdminGlobalSettingsLicenseRequest(options) {
  return new Request('/admin/globalSettings/license', options);
}

/**
 * @typedef {object} PostAdminGlobalSettingsLicenseRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.licenseId
 */

/**
 * @param {PostAdminGlobalSettingsLicenseRequestOptions} options
 * @returns {Request<PostAdminGlobalSettingsLicenseRequestOptions,License>}
 */
export function createPostAdminGlobalSettingsLicenseRequest(options) {
  return new Request('/admin/globalSettings/license', options);
}

/**
 * @typedef {object} GetAdminGlobalSettingsLocaleSettingsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.localeSettingsId
 */

/**
 * @param {GetAdminGlobalSettingsLocaleSettingsRequestOptions} options
 * @returns {Request<GetAdminGlobalSettingsLocaleSettingsRequestOptions,LocaleSettings>}
 */
export function createGetAdminGlobalSettingsLocaleSettingsRequest(options) {
  return new Request('/admin/globalSettings/localeSettings', options);
}

/**
 * @typedef {object} PostAdminGlobalSettingsLocaleSettingsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.localeSettingsId
 */

/**
 * @param {PostAdminGlobalSettingsLocaleSettingsRequestOptions} options
 * @returns {Request<PostAdminGlobalSettingsLocaleSettingsRequestOptions,LocaleSettings>}
 */
export function createPostAdminGlobalSettingsLocaleSettingsRequest(options) {
  return new Request('/admin/globalSettings/localeSettings', options);
}

/**
 * @typedef {object} GetAdminGlobalSettingsNotificationSettingsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.notificationSettingsId
 */

/**
 * @param {GetAdminGlobalSettingsNotificationSettingsRequestOptions} options
 * @returns {Request<GetAdminGlobalSettingsNotificationSettingsRequestOptions,NotificationSettings>}
 */
export function createGetAdminGlobalSettingsNotificationSettingsRequest(options) {
  return new Request('/admin/globalSettings/notificationSettings', options);
}

/**
 * @typedef {object} PostAdminGlobalSettingsNotificationSettingsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.notificationSettingsId
 */

/**
 * @param {PostAdminGlobalSettingsNotificationSettingsRequestOptions} options
 * @returns {Request<PostAdminGlobalSettingsNotificationSettingsRequestOptions,NotificationSettings>}
 */
export function createPostAdminGlobalSettingsNotificationSettingsRequest(options) {
  return new Request('/admin/globalSettings/notificationSettings', options);
}

/**
 * @typedef {object} GetAdminGlobalSettingsRestSettingsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.restCorsSettingsId
 */

/**
 * @param {GetAdminGlobalSettingsRestSettingsRequestOptions} options
 * @returns {Request<GetAdminGlobalSettingsRestSettingsRequestOptions,RestCorsSettings>}
 */
export function createGetAdminGlobalSettingsRestSettingsRequest(options) {
  return new Request('/admin/globalSettings/restSettings', options);
}

/**
 * @typedef {object} PostAdminGlobalSettingsRestSettingsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.restCorsSettingsId
 */

/**
 * @param {PostAdminGlobalSettingsRestSettingsRequestOptions} options
 * @returns {Request<PostAdminGlobalSettingsRestSettingsRequestOptions,RestCorsSettings>}
 */
export function createPostAdminGlobalSettingsRestSettingsRequest(options) {
  return new Request('/admin/globalSettings/restSettings', options);
}

/**
 * @typedef {object} GetAdminGlobalSettingsSystemSettingsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.systemSettingsId
 */

/**
 * @param {GetAdminGlobalSettingsSystemSettingsRequestOptions} options
 * @returns {Request<GetAdminGlobalSettingsSystemSettingsRequestOptions,SystemSettings>}
 */
export function createGetAdminGlobalSettingsSystemSettingsRequest(options) {
  return new Request('/admin/globalSettings/systemSettings', options);
}

/**
 * @typedef {object} PostAdminGlobalSettingsSystemSettingsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.systemSettingsId
 */

/**
 * @param {PostAdminGlobalSettingsSystemSettingsRequestOptions} options
 * @returns {Request<PostAdminGlobalSettingsSystemSettingsRequestOptions,SystemSettings>}
 */
export function createPostAdminGlobalSettingsSystemSettingsRequest(options) {
  return new Request('/admin/globalSettings/systemSettings', options);
}

/**
 * @typedef {object} GetAdminProjectsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {number} [query.$skip]
 * @property {number} [query.$top]
 */

/**
 * @param {GetAdminProjectsRequestOptions} options
 * @returns {Request<GetAdminProjectsRequestOptions,Array<Project>>}
 */
export function createGetAdminProjectsRequest(options) {
  return new Request('/admin/projects', options);
}

/**
 * @typedef {object} PostAdminProjectsRequestOptions
 * @property {object} [query]
 * @property {string} [query.template]
 * @property {string} [query.fields]
 */

/**
 * @param {PostAdminProjectsRequestOptions} options
 * @returns {Request<PostAdminProjectsRequestOptions,Project>}
 */
export function createPostAdminProjectsRequest(options) {
  return new Request('/admin/projects', options);
}

/**
 * @typedef {object} GetAdminProjectsProjectRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {GetAdminProjectsProjectRequestOptions} options
 * @returns {Request<GetAdminProjectsProjectRequestOptions,Project>}
 */
export function createGetAdminProjectsProjectRequest(options) {
  return new Request('/admin/projects/{id}', options);
}

/**
 * @typedef {object} PostAdminProjectsProjectRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {PostAdminProjectsProjectRequestOptions} options
 * @returns {Request<PostAdminProjectsProjectRequestOptions,Project>}
 */
export function createPostAdminProjectsProjectRequest(options) {
  return new Request('/admin/projects/{id}', options);
}

/**
 * @typedef {object} DeleteAdminProjectsProjectRequestOptions
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {DeleteAdminProjectsProjectRequestOptions} options
 * @returns {Request<DeleteAdminProjectsProjectRequestOptions,object>}
 */
export function createDeleteAdminProjectsProjectRequest(options) {
  return new Request('/admin/projects/{id}', options);
}

/**
 * @typedef {object} GetAdminProjectsCustomFieldsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.projectCustomFieldId
 */

/**
 * @param {GetAdminProjectsCustomFieldsRequestOptions} options
 * @returns {Request<GetAdminProjectsCustomFieldsRequestOptions,ProjectCustomField>}
 */
export function createGetAdminProjectsCustomFieldsRequest(options) {
  return new Request('/admin/projects/{id}/customFields', options);
}

/**
 * @typedef {object} PostAdminProjectsCustomFieldsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.projectCustomFieldId
 */

/**
 * @param {PostAdminProjectsCustomFieldsRequestOptions} options
 * @returns {Request<PostAdminProjectsCustomFieldsRequestOptions,ProjectCustomField>}
 */
export function createPostAdminProjectsCustomFieldsRequest(options) {
  return new Request('/admin/projects/{id}/customFields', options);
}

/**
 * @typedef {object} DeleteAdminProjectsCustomFieldsRequestOptions
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.projectCustomFieldId
 */

/**
 * @param {DeleteAdminProjectsCustomFieldsRequestOptions} options
 * @returns {Request<DeleteAdminProjectsCustomFieldsRequestOptions,object>}
 */
export function createDeleteAdminProjectsCustomFieldsRequest(options) {
  return new Request('/admin/projects/{id}/customFields', options);
}

/**
 * @typedef {object} GetAdminProjectsIssuesRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {number} [query.$skip]
 * @property {number} [query.$top]
 */

/**
 * @param {GetAdminProjectsIssuesRequestOptions} options
 * @returns {Request<GetAdminProjectsIssuesRequestOptions,Array<Issue>>}
 */
export function createGetAdminProjectsIssuesRequest(options) {
  return new Request('/admin/projects/{id}/issues', options);
}

/**
 * @typedef {object} PostAdminProjectsIssuesRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {PostAdminProjectsIssuesRequestOptions} options
 * @returns {Request<PostAdminProjectsIssuesRequestOptions,Issue>}
 */
export function createPostAdminProjectsIssuesRequest(options) {
  return new Request('/admin/projects/{id}/issues', options);
}

/**
 * @typedef {object} GetAdminProjectsIssuesIssueRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.issueId
 */

/**
 * @param {GetAdminProjectsIssuesIssueRequestOptions} options
 * @returns {Request<GetAdminProjectsIssuesIssueRequestOptions,Issue>}
 */
export function createGetAdminProjectsIssuesIssueRequest(options) {
  return new Request('/admin/projects/{id}/issues/{issueId}', options);
}

/**
 * @typedef {object} PostAdminProjectsIssuesIssueRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.issueId
 */

/**
 * @param {PostAdminProjectsIssuesIssueRequestOptions} options
 * @returns {Request<PostAdminProjectsIssuesIssueRequestOptions,Issue>}
 */
export function createPostAdminProjectsIssuesIssueRequest(options) {
  return new Request('/admin/projects/{id}/issues/{issueId}', options);
}

/**
 * @typedef {object} DeleteAdminProjectsIssuesIssueRequestOptions
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.issueId
 */

/**
 * @param {DeleteAdminProjectsIssuesIssueRequestOptions} options
 * @returns {Request<DeleteAdminProjectsIssuesIssueRequestOptions,object>}
 */
export function createDeleteAdminProjectsIssuesIssueRequest(options) {
  return new Request('/admin/projects/{id}/issues/{issueId}', options);
}

/**
 * @typedef {object} GetAdminProjectsTimeTrackingSettingsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.projectTimeTrackingSettingsId
 */

/**
 * @param {GetAdminProjectsTimeTrackingSettingsRequestOptions} options
 * @returns {Request<GetAdminProjectsTimeTrackingSettingsRequestOptions,ProjectTimeTrackingSettings>}
 */
export function createGetAdminProjectsTimeTrackingSettingsRequest(options) {
  return new Request('/admin/projects/{id}/timeTrackingSettings', options);
}

/**
 * @typedef {object} PostAdminProjectsTimeTrackingSettingsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.projectTimeTrackingSettingsId
 */

/**
 * @param {PostAdminProjectsTimeTrackingSettingsRequestOptions} options
 * @returns {Request<PostAdminProjectsTimeTrackingSettingsRequestOptions,ProjectTimeTrackingSettings>}
 */
export function createPostAdminProjectsTimeTrackingSettingsRequest(options) {
  return new Request('/admin/projects/{id}/timeTrackingSettings', options);
}

/**
 * @typedef {object} GetAdminProjectsTimeTrackingSettingsWorkItemTypesRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.projectTimeTrackingSettingsId
 * @property {number} [query.$skip]
 * @property {number} [query.$top]
 */

/**
 * @param {GetAdminProjectsTimeTrackingSettingsWorkItemTypesRequestOptions} options
 * @returns {Request<GetAdminProjectsTimeTrackingSettingsWorkItemTypesRequestOptions,Array<WorkItemType>>}
 */
export function createGetAdminProjectsTimeTrackingSettingsWorkItemTypesRequest(options) {
  return new Request('/admin/projects/{id}/timeTrackingSettings/workItemTypes', options);
}

/**
 * @typedef {object} PostAdminProjectsTimeTrackingSettingsWorkItemTypesRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.projectTimeTrackingSettingsId
 */

/**
 * @param {PostAdminProjectsTimeTrackingSettingsWorkItemTypesRequestOptions} options
 * @returns {Request<PostAdminProjectsTimeTrackingSettingsWorkItemTypesRequestOptions,WorkItemType>}
 */
export function createPostAdminProjectsTimeTrackingSettingsWorkItemTypesRequest(options) {
  return new Request('/admin/projects/{id}/timeTrackingSettings/workItemTypes', options);
}

/**
 * @typedef {object} GetAdminProjectsTimeTrackingSettingsWorkItemTypesWorkItemTypeRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.projectTimeTrackingSettingsId
 * @property {string} path.workItemTypeId
 */

/**
 * @param {GetAdminProjectsTimeTrackingSettingsWorkItemTypesWorkItemTypeRequestOptions} options
 * @returns {Request<GetAdminProjectsTimeTrackingSettingsWorkItemTypesWorkItemTypeRequestOptions,WorkItemType>}
 */
export function createGetAdminProjectsTimeTrackingSettingsWorkItemTypesWorkItemTypeRequest(options) {
  return new Request('/admin/projects/{id}/timeTrackingSettings/workItemTypes/{workItemTypeId}', options);
}

/**
 * @typedef {object} DeleteAdminProjectsTimeTrackingSettingsWorkItemTypesWorkItemTypeRequestOptions
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.projectTimeTrackingSettingsId
 * @property {string} path.workItemTypeId
 */

/**
 * @param {DeleteAdminProjectsTimeTrackingSettingsWorkItemTypesWorkItemTypeRequestOptions} options
 * @returns {Request<DeleteAdminProjectsTimeTrackingSettingsWorkItemTypesWorkItemTypeRequestOptions,object>}
 */
export function createDeleteAdminProjectsTimeTrackingSettingsWorkItemTypesWorkItemTypeRequest(options) {
  return new Request('/admin/projects/{id}/timeTrackingSettings/workItemTypes/{workItemTypeId}', options);
}

/**
 * @typedef {object} GetAdminTimeTrackingSettingsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {GetAdminTimeTrackingSettingsRequestOptions} options
 * @returns {Request<GetAdminTimeTrackingSettingsRequestOptions,GlobalTimeTrackingSettings>}
 */
export function createGetAdminTimeTrackingSettingsRequest(options) {
  return new Request('/admin/timeTrackingSettings', options);
}

/**
 * @typedef {object} GetAdminTimeTrackingSettingsWorkItemTypesRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {number} [query.$skip]
 * @property {number} [query.$top]
 */

/**
 * @param {GetAdminTimeTrackingSettingsWorkItemTypesRequestOptions} options
 * @returns {Request<GetAdminTimeTrackingSettingsWorkItemTypesRequestOptions,Array<WorkItemType>>}
 */
export function createGetAdminTimeTrackingSettingsWorkItemTypesRequest(options) {
  return new Request('/admin/timeTrackingSettings/workItemTypes', options);
}

/**
 * @typedef {object} PostAdminTimeTrackingSettingsWorkItemTypesRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {PostAdminTimeTrackingSettingsWorkItemTypesRequestOptions} options
 * @returns {Request<PostAdminTimeTrackingSettingsWorkItemTypesRequestOptions,WorkItemType>}
 */
export function createPostAdminTimeTrackingSettingsWorkItemTypesRequest(options) {
  return new Request('/admin/timeTrackingSettings/workItemTypes', options);
}

/**
 * @typedef {object} GetAdminTimeTrackingSettingsWorkItemTypesWorkItemTypeRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.workItemTypeId
 */

/**
 * @param {GetAdminTimeTrackingSettingsWorkItemTypesWorkItemTypeRequestOptions} options
 * @returns {Request<GetAdminTimeTrackingSettingsWorkItemTypesWorkItemTypeRequestOptions,WorkItemType>}
 */
export function createGetAdminTimeTrackingSettingsWorkItemTypesWorkItemTypeRequest(options) {
  return new Request('/admin/timeTrackingSettings/workItemTypes/{workItemTypeId}', options);
}

/**
 * @typedef {object} PostAdminTimeTrackingSettingsWorkItemTypesWorkItemTypeRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.workItemTypeId
 */

/**
 * @param {PostAdminTimeTrackingSettingsWorkItemTypesWorkItemTypeRequestOptions} options
 * @returns {Request<PostAdminTimeTrackingSettingsWorkItemTypesWorkItemTypeRequestOptions,WorkItemType>}
 */
export function createPostAdminTimeTrackingSettingsWorkItemTypesWorkItemTypeRequest(options) {
  return new Request('/admin/timeTrackingSettings/workItemTypes/{workItemTypeId}', options);
}

/**
 * @typedef {object} DeleteAdminTimeTrackingSettingsWorkItemTypesWorkItemTypeRequestOptions
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.workItemTypeId
 */

/**
 * @param {DeleteAdminTimeTrackingSettingsWorkItemTypesWorkItemTypeRequestOptions} options
 * @returns {Request<DeleteAdminTimeTrackingSettingsWorkItemTypesWorkItemTypeRequestOptions,object>}
 */
export function createDeleteAdminTimeTrackingSettingsWorkItemTypesWorkItemTypeRequest(options) {
  return new Request('/admin/timeTrackingSettings/workItemTypes/{workItemTypeId}', options);
}

/**
 * @typedef {object} GetAdminTimeTrackingSettingsWorkTimeSettingsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.workTimeSettingsId
 */

/**
 * @param {GetAdminTimeTrackingSettingsWorkTimeSettingsRequestOptions} options
 * @returns {Request<GetAdminTimeTrackingSettingsWorkTimeSettingsRequestOptions,WorkTimeSettings>}
 */
export function createGetAdminTimeTrackingSettingsWorkTimeSettingsRequest(options) {
  return new Request('/admin/timeTrackingSettings/workTimeSettings', options);
}

/**
 * @typedef {object} PostAdminTimeTrackingSettingsWorkTimeSettingsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.workTimeSettingsId
 */

/**
 * @param {PostAdminTimeTrackingSettingsWorkTimeSettingsRequestOptions} options
 * @returns {Request<PostAdminTimeTrackingSettingsWorkTimeSettingsRequestOptions,WorkTimeSettings>}
 */
export function createPostAdminTimeTrackingSettingsWorkTimeSettingsRequest(options) {
  return new Request('/admin/timeTrackingSettings/workTimeSettings', options);
}

/**
 * @typedef {object} GetAgilesRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {number} [query.$skip]
 * @property {number} [query.$top]
 */

/**
 * @param {GetAgilesRequestOptions} options
 * @returns {Request<GetAgilesRequestOptions,Array<Agile>>}
 */
export function createGetAgilesRequest(options) {
  return new Request('/agiles', options);
}

/**
 * @typedef {object} PostAgilesRequestOptions
 * @property {object} [query]
 * @property {string} [query.template]
 * @property {string} [query.fields]
 */

/**
 * @param {PostAgilesRequestOptions} options
 * @returns {Request<PostAgilesRequestOptions,Agile>}
 */
export function createPostAgilesRequest(options) {
  return new Request('/agiles', options);
}

/**
 * @typedef {object} GetAgilesAgileRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {GetAgilesAgileRequestOptions} options
 * @returns {Request<GetAgilesAgileRequestOptions,Agile>}
 */
export function createGetAgilesAgileRequest(options) {
  return new Request('/agiles/{id}', options);
}

/**
 * @typedef {object} PostAgilesAgileRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {PostAgilesAgileRequestOptions} options
 * @returns {Request<PostAgilesAgileRequestOptions,Agile>}
 */
export function createPostAgilesAgileRequest(options) {
  return new Request('/agiles/{id}', options);
}

/**
 * @typedef {object} DeleteAgilesAgileRequestOptions
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {DeleteAgilesAgileRequestOptions} options
 * @returns {Request<DeleteAgilesAgileRequestOptions,object>}
 */
export function createDeleteAgilesAgileRequest(options) {
  return new Request('/agiles/{id}', options);
}

/**
 * @typedef {object} GetAgilesSprintsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {number} [query.$skip]
 * @property {number} [query.$top]
 */

/**
 * @param {GetAgilesSprintsRequestOptions} options
 * @returns {Request<GetAgilesSprintsRequestOptions,Array<Sprint>>}
 */
export function createGetAgilesSprintsRequest(options) {
  return new Request('/agiles/{id}/sprints', options);
}

/**
 * @typedef {object} PostAgilesSprintsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {PostAgilesSprintsRequestOptions} options
 * @returns {Request<PostAgilesSprintsRequestOptions,Sprint>}
 */
export function createPostAgilesSprintsRequest(options) {
  return new Request('/agiles/{id}/sprints', options);
}

/**
 * @typedef {object} GetAgilesSprintsSprintRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.sprintId
 */

/**
 * @param {GetAgilesSprintsSprintRequestOptions} options
 * @returns {Request<GetAgilesSprintsSprintRequestOptions,Sprint>}
 */
export function createGetAgilesSprintsSprintRequest(options) {
  return new Request('/agiles/{id}/sprints/{sprintId}', options);
}

/**
 * @typedef {object} PostAgilesSprintsSprintRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.sprintId
 */

/**
 * @param {PostAgilesSprintsSprintRequestOptions} options
 * @returns {Request<PostAgilesSprintsSprintRequestOptions,Sprint>}
 */
export function createPostAgilesSprintsSprintRequest(options) {
  return new Request('/agiles/{id}/sprints/{sprintId}', options);
}

/**
 * @typedef {object} DeleteAgilesSprintsSprintRequestOptions
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.sprintId
 */

/**
 * @param {DeleteAgilesSprintsSprintRequestOptions} options
 * @returns {Request<DeleteAgilesSprintsSprintRequestOptions,object>}
 */
export function createDeleteAgilesSprintsSprintRequest(options) {
  return new Request('/agiles/{id}/sprints/{sprintId}', options);
}





/**
 * @typedef {object} GetGroupsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {number} [query.$skip]
 * @property {number} [query.$top]
 */

/**
 * @param {GetGroupsRequestOptions} options
 * @returns {Request<GetGroupsRequestOptions,Array<UserGroup>>}
 */
export function createGetGroupsRequest(options) {
  return new Request('/groups', options);
}

/**
 * @typedef {object} GetGroupsUserGroupRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {GetGroupsUserGroupRequestOptions} options
 * @returns {Request<GetGroupsUserGroupRequestOptions,UserGroup>}
 */
export function createGetGroupsUserGroupRequest(options) {
  return new Request('/groups/{id}', options);
}

/**
 * @typedef {object} GetIssueLinkTypesRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {number} [query.$skip]
 * @property {number} [query.$top]
 */

/**
 * @param {GetIssueLinkTypesRequestOptions} options
 * @returns {Request<GetIssueLinkTypesRequestOptions,Array<IssueLinkType>>}
 */
export function createGetIssueLinkTypesRequest(options) {
  return new Request('/issueLinkTypes', options);
}

/**
 * @typedef {object} PostIssueLinkTypesRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 */

/**
 * @param {PostIssueLinkTypesRequestOptions} options
 * @returns {Request<PostIssueLinkTypesRequestOptions,IssueLinkType>}
 */
export function createPostIssueLinkTypesRequest(options) {
  return new Request('/issueLinkTypes', options);
}

/**
 * @typedef {object} GetIssueLinkTypesIssueLinkTypeRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {GetIssueLinkTypesIssueLinkTypeRequestOptions} options
 * @returns {Request<GetIssueLinkTypesIssueLinkTypeRequestOptions,IssueLinkType>}
 */
export function createGetIssueLinkTypesIssueLinkTypeRequest(options) {
  return new Request('/issueLinkTypes/{id}', options);
}

/**
 * @typedef {object} PostIssueLinkTypesIssueLinkTypeRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {PostIssueLinkTypesIssueLinkTypeRequestOptions} options
 * @returns {Request<PostIssueLinkTypesIssueLinkTypeRequestOptions,IssueLinkType>}
 */
export function createPostIssueLinkTypesIssueLinkTypeRequest(options) {
  return new Request('/issueLinkTypes/{id}', options);
}

/**
 * @typedef {object} DeleteIssueLinkTypesIssueLinkTypeRequestOptions
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {DeleteIssueLinkTypesIssueLinkTypeRequestOptions} options
 * @returns {Request<DeleteIssueLinkTypesIssueLinkTypeRequestOptions,object>}
 */
export function createDeleteIssueLinkTypesIssueLinkTypeRequest(options) {
  return new Request('/issueLinkTypes/{id}', options);
}

/**
 * @typedef {object} GetIssueTagsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {number} [query.$skip]
 * @property {number} [query.$top]
 */

/**
 * @param {GetIssueTagsRequestOptions} options
 * @returns {Request<GetIssueTagsRequestOptions,Array<IssueTag>>}
 */
export function createGetIssueTagsRequest(options) {
  return new Request('/issueTags', options);
}

/**
 * @typedef {object} PostIssueTagsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 */

/**
 * @param {PostIssueTagsRequestOptions} options
 * @returns {Request<PostIssueTagsRequestOptions,IssueTag>}
 */
export function createPostIssueTagsRequest(options) {
  return new Request('/issueTags', options);
}

/**
 * @typedef {object} GetIssueTagsIssueTagRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {GetIssueTagsIssueTagRequestOptions} options
 * @returns {Request<GetIssueTagsIssueTagRequestOptions,IssueTag>}
 */
export function createGetIssueTagsIssueTagRequest(options) {
  return new Request('/issueTags/{id}', options);
}

/**
 * @typedef {object} PostIssueTagsIssueTagRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {PostIssueTagsIssueTagRequestOptions} options
 * @returns {Request<PostIssueTagsIssueTagRequestOptions,IssueTag>}
 */
export function createPostIssueTagsIssueTagRequest(options) {
  return new Request('/issueTags/{id}', options);
}

/**
 * @typedef {object} DeleteIssueTagsIssueTagRequestOptions
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {DeleteIssueTagsIssueTagRequestOptions} options
 * @returns {Request<DeleteIssueTagsIssueTagRequestOptions,object>}
 */
export function createDeleteIssueTagsIssueTagRequest(options) {
  return new Request('/issueTags/{id}', options);
}

/**
 * @typedef {object} GetIssueTagsIssuesRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {number} [query.$skip]
 * @property {number} [query.$top]
 */

/**
 * @param {GetIssueTagsIssuesRequestOptions} options
 * @returns {Request<GetIssueTagsIssuesRequestOptions,Array<Issue>>}
 */
export function createGetIssueTagsIssuesRequest(options) {
  return new Request('/issueTags/{id}/issues', options);
}



/**
 * @typedef {object} GetIssuesRequestOptions
 * @property {object} [query]
 * @property {string} [query.query]
 * @property {string} [query.fields]
 * @property {number} [query.$skip]
 * @property {number} [query.$top]
 */

/**
 * @param {GetIssuesRequestOptions} options
 * @returns {Request<GetIssuesRequestOptions,Array<Issue>>}
 */
export function createGetIssuesRequest(options) {
  return new Request('/issues', options);
}

/**
 * @typedef {object} PostIssuesRequestOptions
 * @property {object} [query]
 * @property {string} [query.draftId]
 * @property {string} [query.fields]
 */

/**
 * @param {PostIssuesRequestOptions} options
 * @returns {Request<PostIssuesRequestOptions,Issue>}
 */
export function createPostIssuesRequest(options) {
  return new Request('/issues', options);
}

/**
 * @typedef {object} GetIssuesIssueRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {GetIssuesIssueRequestOptions} options
 * @returns {Request<GetIssuesIssueRequestOptions,Issue>}
 */
export function createGetIssuesIssueRequest(options) {
  return new Request('/issues/{id}', options);
}

/**
 * @typedef {object} PostIssuesIssueRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {PostIssuesIssueRequestOptions} options
 * @returns {Request<PostIssuesIssueRequestOptions,Issue>}
 */
export function createPostIssuesIssueRequest(options) {
  return new Request('/issues/{id}', options);
}

/**
 * @typedef {object} DeleteIssuesIssueRequestOptions
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {DeleteIssuesIssueRequestOptions} options
 * @returns {Request<DeleteIssuesIssueRequestOptions,object>}
 */
export function createDeleteIssuesIssueRequest(options) {
  return new Request('/issues/{id}', options);
}

/**
 * @typedef {object} GetIssuesActivitiesRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.activityItemId
 */

/**
 * @param {GetIssuesActivitiesRequestOptions} options
 * @returns {Request<GetIssuesActivitiesRequestOptions,ActivityItem>}
 */
export function createGetIssuesActivitiesRequest(options) {
  return new Request('/issues/{id}/activities', options);
}

/**
 * @typedef {object} GetIssuesActivitiesPageRequestOptions
 * @property {object} [query]
 * @property {string} [query.categories]
 * @property {boolean} [query.reverse]
 * @property {string} [query.start]
 * @property {string} [query.end]
 * @property {string} [query.author]
 * @property {string} [query.cursor]
 * @property {string} [query.activityId]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.activityCursorPageId
 */

/**
 * @param {GetIssuesActivitiesPageRequestOptions} options
 * @returns {Request<GetIssuesActivitiesPageRequestOptions,ActivityCursorPage>}
 */
export function createGetIssuesActivitiesPageRequest(options) {
  return new Request('/issues/{id}/activitiesPage', options);
}

/**
 * @typedef {object} GetIssuesAttachmentsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {number} [query.$skip]
 * @property {number} [query.$top]
 */

/**
 * @param {GetIssuesAttachmentsRequestOptions} options
 * @returns {Request<GetIssuesAttachmentsRequestOptions,Array<IssueAttachment>>}
 */
export function createGetIssuesAttachmentsRequest(options) {
  return new Request('/issues/{id}/attachments', options);
}

/**
 * @typedef {object} PostIssuesAttachmentsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {PostIssuesAttachmentsRequestOptions} options
 * @returns {Request<PostIssuesAttachmentsRequestOptions,IssueAttachment>}
 */
export function createPostIssuesAttachmentsRequest(options) {
  return new Request('/issues/{id}/attachments', options);
}

/**
 * @typedef {object} GetIssuesAttachmentsIssueAttachmentRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.issueAttachmentId
 */

/**
 * @param {GetIssuesAttachmentsIssueAttachmentRequestOptions} options
 * @returns {Request<GetIssuesAttachmentsIssueAttachmentRequestOptions,IssueAttachment>}
 */
export function createGetIssuesAttachmentsIssueAttachmentRequest(options) {
  return new Request('/issues/{id}/attachments/{issueAttachmentId}', options);
}

/**
 * @typedef {object} PostIssuesAttachmentsIssueAttachmentRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.issueAttachmentId
 */

/**
 * @param {PostIssuesAttachmentsIssueAttachmentRequestOptions} options
 * @returns {Request<PostIssuesAttachmentsIssueAttachmentRequestOptions,IssueAttachment>}
 */
export function createPostIssuesAttachmentsIssueAttachmentRequest(options) {
  return new Request('/issues/{id}/attachments/{issueAttachmentId}', options);
}

/**
 * @typedef {object} DeleteIssuesAttachmentsIssueAttachmentRequestOptions
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.issueAttachmentId
 */

/**
 * @param {DeleteIssuesAttachmentsIssueAttachmentRequestOptions} options
 * @returns {Request<DeleteIssuesAttachmentsIssueAttachmentRequestOptions,object>}
 */
export function createDeleteIssuesAttachmentsIssueAttachmentRequest(options) {
  return new Request('/issues/{id}/attachments/{issueAttachmentId}', options);
}

/**
 * @typedef {object} GetIssuesCommentsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {number} [query.$skip]
 * @property {number} [query.$top]
 */

/**
 * @param {GetIssuesCommentsRequestOptions} options
 * @returns {Request<GetIssuesCommentsRequestOptions,Array<IssueComment>>}
 */
export function createGetIssuesCommentsRequest(options) {
  return new Request('/issues/{id}/comments', options);
}

/**
 * @typedef {object} PostIssuesCommentsRequestOptions
 * @property {object} [query]
 * @property {string} [query.draftId]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {PostIssuesCommentsRequestOptions} options
 * @returns {Request<PostIssuesCommentsRequestOptions,IssueComment>}
 */
export function createPostIssuesCommentsRequest(options) {
  return new Request('/issues/{id}/comments', options);
}

/**
 * @typedef {object} GetIssuesCommentsIssueCommentRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.issueCommentId
 */

/**
 * @param {GetIssuesCommentsIssueCommentRequestOptions} options
 * @returns {Request<GetIssuesCommentsIssueCommentRequestOptions,IssueComment>}
 */
export function createGetIssuesCommentsIssueCommentRequest(options) {
  return new Request('/issues/{id}/comments/{issueCommentId}', options);
}

/**
 * @typedef {object} PostIssuesCommentsIssueCommentRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.issueCommentId
 */

/**
 * @param {PostIssuesCommentsIssueCommentRequestOptions} options
 * @returns {Request<PostIssuesCommentsIssueCommentRequestOptions,IssueComment>}
 */
export function createPostIssuesCommentsIssueCommentRequest(options) {
  return new Request('/issues/{id}/comments/{issueCommentId}', options);
}

/**
 * @typedef {object} DeleteIssuesCommentsIssueCommentRequestOptions
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.issueCommentId
 */

/**
 * @param {DeleteIssuesCommentsIssueCommentRequestOptions} options
 * @returns {Request<DeleteIssuesCommentsIssueCommentRequestOptions,object>}
 */
export function createDeleteIssuesCommentsIssueCommentRequest(options) {
  return new Request('/issues/{id}/comments/{issueCommentId}', options);
}

/**
 * @typedef {object} GetIssuesCustomFieldsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {number} [query.$skip]
 * @property {number} [query.$top]
 */

/**
 * @param {GetIssuesCustomFieldsRequestOptions} options
 * @returns {Request<GetIssuesCustomFieldsRequestOptions,Array<IssueCustomField>>}
 */
export function createGetIssuesCustomFieldsRequest(options) {
  return new Request('/issues/{id}/customFields', options);
}

/**
 * @typedef {object} GetIssuesCustomFieldsIssueCustomFieldRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.issueCustomFieldId
 */

/**
 * @param {GetIssuesCustomFieldsIssueCustomFieldRequestOptions} options
 * @returns {Request<GetIssuesCustomFieldsIssueCustomFieldRequestOptions,IssueCustomField>}
 */
export function createGetIssuesCustomFieldsIssueCustomFieldRequest(options) {
  return new Request('/issues/{id}/customFields/{issueCustomFieldId}', options);
}

/**
 * @typedef {object} PostIssuesCustomFieldsIssueCustomFieldRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.issueCustomFieldId
 */

/**
 * @param {PostIssuesCustomFieldsIssueCustomFieldRequestOptions} options
 * @returns {Request<PostIssuesCustomFieldsIssueCustomFieldRequestOptions,IssueCustomField>}
 */
export function createPostIssuesCustomFieldsIssueCustomFieldRequest(options) {
  return new Request('/issues/{id}/customFields/{issueCustomFieldId}', options);
}

/**
 * @typedef {object} GetIssuesLinksRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {number} [query.$skip]
 * @property {number} [query.$top]
 */

/**
 * @param {GetIssuesLinksRequestOptions} options
 * @returns {Request<GetIssuesLinksRequestOptions,Array<IssueLink>>}
 */
export function createGetIssuesLinksRequest(options) {
  return new Request('/issues/{id}/links', options);
}

/**
 * @typedef {object} GetIssuesLinksIssueLinkRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.issueLinkId
 */

/**
 * @param {GetIssuesLinksIssueLinkRequestOptions} options
 * @returns {Request<GetIssuesLinksIssueLinkRequestOptions,IssueLink>}
 */
export function createGetIssuesLinksIssueLinkRequest(options) {
  return new Request('/issues/{id}/links/{issueLinkId}', options);
}

/**
 * @typedef {object} GetIssuesLinksIssuesRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.issueLinkId
 * @property {number} [query.$skip]
 * @property {number} [query.$top]
 */

/**
 * @param {GetIssuesLinksIssuesRequestOptions} options
 * @returns {Request<GetIssuesLinksIssuesRequestOptions,Array<Issue>>}
 */
export function createGetIssuesLinksIssuesRequest(options) {
  return new Request('/issues/{id}/links/{issueLinkId}/issues', options);
}

/**
 * @typedef {object} PostIssuesLinksIssuesRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.issueLinkId
 */

/**
 * @param {PostIssuesLinksIssuesRequestOptions} options
 * @returns {Request<PostIssuesLinksIssuesRequestOptions,Issue>}
 */
export function createPostIssuesLinksIssuesRequest(options) {
  return new Request('/issues/{id}/links/{issueLinkId}/issues', options);
}

/**
 * @typedef {object} DeleteIssuesLinksIssuesIssueRequestOptions
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.issueLinkId
 * @property {string} path.issueId
 */

/**
 * @param {DeleteIssuesLinksIssuesIssueRequestOptions} options
 * @returns {Request<DeleteIssuesLinksIssuesIssueRequestOptions,object>}
 */
export function createDeleteIssuesLinksIssuesIssueRequest(options) {
  return new Request('/issues/{id}/links/{issueLinkId}/issues/{issueId}', options);
}

/**
 * @typedef {object} GetIssuesProjectRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.projectId
 */

/**
 * @param {GetIssuesProjectRequestOptions} options
 * @returns {Request<GetIssuesProjectRequestOptions,Project>}
 */
export function createGetIssuesProjectRequest(options) {
  return new Request('/issues/{id}/project', options);
}

/**
 * @typedef {object} PostIssuesProjectRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.projectId
 */

/**
 * @param {PostIssuesProjectRequestOptions} options
 * @returns {Request<PostIssuesProjectRequestOptions,Project>}
 */
export function createPostIssuesProjectRequest(options) {
  return new Request('/issues/{id}/project', options);
}

/**
 * @typedef {object} GetIssuesTimeTrackingRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.issueTimeTrackingId
 */

/**
 * @param {GetIssuesTimeTrackingRequestOptions} options
 * @returns {Request<GetIssuesTimeTrackingRequestOptions,IssueTimeTracker>}
 */
export function createGetIssuesTimeTrackingRequest(options) {
  return new Request('/issues/{id}/timeTracking', options);
}

/**
 * @typedef {object} GetIssuesTimeTrackingWorkItemsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.issueTimeTrackingId
 * @property {number} [query.$skip]
 * @property {number} [query.$top]
 */

/**
 * @param {GetIssuesTimeTrackingWorkItemsRequestOptions} options
 * @returns {Request<GetIssuesTimeTrackingWorkItemsRequestOptions,Array<IssueWorkItem>>}
 */
export function createGetIssuesTimeTrackingWorkItemsRequest(options) {
  return new Request('/issues/{id}/timeTracking/workItems', options);
}

/**
 * @typedef {object} PostIssuesTimeTrackingWorkItemsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.issueTimeTrackingId
 */

/**
 * @param {PostIssuesTimeTrackingWorkItemsRequestOptions} options
 * @returns {Request<PostIssuesTimeTrackingWorkItemsRequestOptions,IssueWorkItem>}
 */
export function createPostIssuesTimeTrackingWorkItemsRequest(options) {
  return new Request('/issues/{id}/timeTracking/workItems', options);
}

/**
 * @typedef {object} GetIssuesTimeTrackingWorkItemsIssueWorkItemRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.issueTimeTrackingId
 * @property {string} path.issueWorkItemId
 */

/**
 * @param {GetIssuesTimeTrackingWorkItemsIssueWorkItemRequestOptions} options
 * @returns {Request<GetIssuesTimeTrackingWorkItemsIssueWorkItemRequestOptions,IssueWorkItem>}
 */
export function createGetIssuesTimeTrackingWorkItemsIssueWorkItemRequest(options) {
  return new Request('/issues/{id}/timeTracking/workItems/{issueWorkItemId}', options);
}

/**
 * @typedef {object} PostIssuesTimeTrackingWorkItemsIssueWorkItemRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.issueTimeTrackingId
 * @property {string} path.issueWorkItemId
 */

/**
 * @param {PostIssuesTimeTrackingWorkItemsIssueWorkItemRequestOptions} options
 * @returns {Request<PostIssuesTimeTrackingWorkItemsIssueWorkItemRequestOptions,IssueWorkItem>}
 */
export function createPostIssuesTimeTrackingWorkItemsIssueWorkItemRequest(options) {
  return new Request('/issues/{id}/timeTracking/workItems/{issueWorkItemId}', options);
}

/**
 * @typedef {object} DeleteIssuesTimeTrackingWorkItemsIssueWorkItemRequestOptions
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.issueTimeTrackingId
 * @property {string} path.issueWorkItemId
 */

/**
 * @param {DeleteIssuesTimeTrackingWorkItemsIssueWorkItemRequestOptions} options
 * @returns {Request<DeleteIssuesTimeTrackingWorkItemsIssueWorkItemRequestOptions,object>}
 */
export function createDeleteIssuesTimeTrackingWorkItemsIssueWorkItemRequest(options) {
  return new Request('/issues/{id}/timeTracking/workItems/{issueWorkItemId}', options);
}

/**
 * @typedef {object} GetSavedQueriesRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {number} [query.$skip]
 * @property {number} [query.$top]
 */

/**
 * @param {GetSavedQueriesRequestOptions} options
 * @returns {Request<GetSavedQueriesRequestOptions,Array<SavedQuery>>}
 */
export function createGetSavedQueriesRequest(options) {
  return new Request('/savedQueries', options);
}

/**
 * @typedef {object} PostSavedQueriesRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 */

/**
 * @param {PostSavedQueriesRequestOptions} options
 * @returns {Request<PostSavedQueriesRequestOptions,SavedQuery>}
 */
export function createPostSavedQueriesRequest(options) {
  return new Request('/savedQueries', options);
}

/**
 * @typedef {object} GetSavedQueriesSavedQueryRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {GetSavedQueriesSavedQueryRequestOptions} options
 * @returns {Request<GetSavedQueriesSavedQueryRequestOptions,SavedQuery>}
 */
export function createGetSavedQueriesSavedQueryRequest(options) {
  return new Request('/savedQueries/{id}', options);
}

/**
 * @typedef {object} PostSavedQueriesSavedQueryRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {PostSavedQueriesSavedQueryRequestOptions} options
 * @returns {Request<PostSavedQueriesSavedQueryRequestOptions,SavedQuery>}
 */
export function createPostSavedQueriesSavedQueryRequest(options) {
  return new Request('/savedQueries/{id}', options);
}

/**
 * @typedef {object} DeleteSavedQueriesSavedQueryRequestOptions
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {DeleteSavedQueriesSavedQueryRequestOptions} options
 * @returns {Request<DeleteSavedQueriesSavedQueryRequestOptions,object>}
 */
export function createDeleteSavedQueriesSavedQueryRequest(options) {
  return new Request('/savedQueries/{id}', options);
}

/**
 * @typedef {object} GetUsersRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {number} [query.$skip]
 * @property {number} [query.$top]
 */

/**
 * @param {GetUsersRequestOptions} options
 * @returns {Request<GetUsersRequestOptions,Array<User>>}
 */
export function createGetUsersRequest(options) {
  return new Request('/users', options);
}

/**
 * @typedef {object} GetUsersUserRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {GetUsersUserRequestOptions} options
 * @returns {Request<GetUsersUserRequestOptions,User>}
 */
export function createGetUsersUserRequest(options) {
  return new Request('/users/{id}', options);
}

/**
 * @typedef {object} GetUsersProfilesGeneralRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.generalUserProfileId
 */

/**
 * @param {GetUsersProfilesGeneralRequestOptions} options
 * @returns {Request<GetUsersProfilesGeneralRequestOptions,GeneralUserProfile>}
 */
export function createGetUsersProfilesGeneralRequest(options) {
  return new Request('/users/{id}/profiles/general', options);
}

/**
 * @typedef {object} PostUsersProfilesGeneralRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.generalUserProfileId
 */

/**
 * @param {PostUsersProfilesGeneralRequestOptions} options
 * @returns {Request<PostUsersProfilesGeneralRequestOptions,GeneralUserProfile>}
 */
export function createPostUsersProfilesGeneralRequest(options) {
  return new Request('/users/{id}/profiles/general', options);
}

/**
 * @typedef {object} GetUsersProfilesNotificationsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.notificationsUserProfileId
 */

/**
 * @param {GetUsersProfilesNotificationsRequestOptions} options
 * @returns {Request<GetUsersProfilesNotificationsRequestOptions,NotificationsUserProfile>}
 */
export function createGetUsersProfilesNotificationsRequest(options) {
  return new Request('/users/{id}/profiles/notifications', options);
}

/**
 * @typedef {object} PostUsersProfilesNotificationsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.notificationsUserProfileId
 */

/**
 * @param {PostUsersProfilesNotificationsRequestOptions} options
 * @returns {Request<PostUsersProfilesNotificationsRequestOptions,NotificationsUserProfile>}
 */
export function createPostUsersProfilesNotificationsRequest(options) {
  return new Request('/users/{id}/profiles/notifications', options);
}

/**
 * @typedef {object} GetUsersProfilesTimetrackingRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.timeTrackingUserProfileId
 */

/**
 * @param {GetUsersProfilesTimetrackingRequestOptions} options
 * @returns {Request<GetUsersProfilesTimetrackingRequestOptions,TimeTrackingUserProfile>}
 */
export function createGetUsersProfilesTimetrackingRequest(options) {
  return new Request('/users/{id}/profiles/timetracking', options);
}

/**
 * @typedef {object} PostUsersProfilesTimetrackingRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {string} path.timeTrackingUserProfileId
 */

/**
 * @param {PostUsersProfilesTimetrackingRequestOptions} options
 * @returns {Request<PostUsersProfilesTimetrackingRequestOptions,TimeTrackingUserProfile>}
 */
export function createPostUsersProfilesTimetrackingRequest(options) {
  return new Request('/users/{id}/profiles/timetracking', options);
}

/**
 * @typedef {object} GetUsersSavedQueriesRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {number} [query.$skip]
 * @property {number} [query.$top]
 */

/**
 * @param {GetUsersSavedQueriesRequestOptions} options
 * @returns {Request<GetUsersSavedQueriesRequestOptions,Array<SavedQuery>>}
 */
export function createGetUsersSavedQueriesRequest(options) {
  return new Request('/users/{id}/savedQueries', options);
}



/**
 * @typedef {object} GetUsersTagsRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 * @property {number} [query.$skip]
 * @property {number} [query.$top]
 */

/**
 * @param {GetUsersTagsRequestOptions} options
 * @returns {Request<GetUsersTagsRequestOptions,Array<IssueTag>>}
 */
export function createGetUsersTagsRequest(options) {
  return new Request('/users/{id}/tags', options);
}



/**
 * @typedef {object} GetUsersMeRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {GetUsersMeRequestOptions} options
 * @returns {Request<GetUsersMeRequestOptions,Me>}
 */
export function createGetUsersMeRequest(options) {
  return new Request('/users/me', options);
}

/**
 * @typedef {object} GetWorkItemsRequestOptions
 * @property {object} [query]
 * @property {string} [query.query]
 * @property {string} [query.startDate]
 * @property {string} [query.endDate]
 * @property {number} [query.start]
 * @property {number} [query.end]
 * @property {number} [query.createdStart]
 * @property {number} [query.createdEnd]
 * @property {number} [query.updatedStart]
 * @property {number} [query.updatedEnd]
 * @property {string} [query.author]
 * @property {string} [query.creator]
 * @property {string} [query.fields]
 * @property {number} [query.$skip]
 * @property {number} [query.$top]
 */

/**
 * @param {GetWorkItemsRequestOptions} options
 * @returns {Request<GetWorkItemsRequestOptions,Array<IssueWorkItem>>}
 */
export function createGetWorkItemsRequest(options) {
  return new Request('/workItems', options);
}

/**
 * @typedef {object} GetWorkItemsIssueWorkItemRequestOptions
 * @property {object} [query]
 * @property {string} [query.fields]
 * @property {object} path
 * @property {string} path.id
 */

/**
 * @param {GetWorkItemsIssueWorkItemRequestOptions} options
 * @returns {Request<GetWorkItemsIssueWorkItemRequestOptions,IssueWorkItem>}
 */
export function createGetWorkItemsIssueWorkItemRequest(options) {
  return new Request('/workItems/{id}', options);
}